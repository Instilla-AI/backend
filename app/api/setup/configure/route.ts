import { NextRequest, NextResponse } from 'next/server';
import { writeFileSync } from 'fs';
import { join } from 'path';

export async function POST(request: NextRequest) {
  try {
    const { databaseUrl, authSecret, appName, primaryColor, logoUrl } = await request.json();

    // Create .env.local file
    const envContent = `# Generated by Setup Wizard
DATABASE_URL=${databaseUrl}
BETTER_AUTH_SECRET=${authSecret}
BETTER_AUTH_URL=${process.env.RAILWAY_PUBLIC_DOMAIN ? `https://${process.env.RAILWAY_PUBLIC_DOMAIN}` : 'http://localhost:3000'}
NEXT_PUBLIC_APP_URL=${process.env.RAILWAY_PUBLIC_DOMAIN ? `https://${process.env.RAILWAY_PUBLIC_DOMAIN}` : 'http://localhost:3000'}

# Branding
NEXT_PUBLIC_APP_NAME=${appName}
NEXT_PUBLIC_PRIMARY_COLOR=${primaryColor}
NEXT_PUBLIC_LOGO_URL=${logoUrl || ''}
`;

    const envPath = join(process.cwd(), '.env.local');
    writeFileSync(envPath, envContent);

    // Create branding config file
    const brandingConfig = {
      appName,
      primaryColor,
      logoUrl
    };

    const configPath = join(process.cwd(), 'config', 'branding.json');
    writeFileSync(configPath, JSON.stringify(brandingConfig, null, 2));

    return NextResponse.json({ success: true });
  } catch (error: any) {
    console.error('Configuration failed:', error);
    return NextResponse.json(
      { error: 'Failed to save configuration: ' + error.message },
      { status: 500 }
    );
  }
}
